set.seed(1)
mu <- c(1, 2)
Sigma <- matrix(c(1, 0.5, 0.5, 1), nrow = 2, byrow = TRUE)
n <- 2000
Z <- matrix(rnorm(n * 2), nrow = n, ncol = 2)
A <- chol(Sigma)
data <- mu + Z %*% A
print(head(data, 5))
sample_cov <- cov(data)
print(sample_cov)
print(sample_cov - Sigma)
mymvnorm <- function(n, mu, sigma) {
Z <- matrix(rnorm(n * length(mu)), nrow = n, ncol = length(mu))
A <- chol(sigma)
data <- mu + Z %*% A
return(data)
}
set.seed(1)
n <- 2000
mu <- c(1, 2)
Sigma <- matrix(c(1, 0.5, 0.5, 1), nrow = 2)
data <- mymvnorm(n, mu, Sigma)
print(head(data, 5))
sample_cov <- cov(data)
print(sample_cov)
print(sample_cov - Sigma)
aapl_prices <- Cl(AAPL)
library(quantmod)
getSymbols("AAPL")
set.seed(1)
mu <- c(1, 2)
Sigma <- matrix(c(1, 0.5, 0.5, 1), nrow = 2, byrow = TRUE)
n <- 2000
Z <- matrix(rnorm(n * 2), nrow = n, ncol = 2)
A <- chol(Sigma)
data <- mu + Z %*% A
print(head(data, 5))
sample_cov <- cov(data)
print(sample_cov)
print(sample_cov - Sigma)
# Generate standard normal variables
Z <- matrix(rnorm(n * 2), nrow = n)
# Compute Cholesky decomposition of Sigma
A <- chol(Sigma)
# Transform standard normal variables
data_manual <- t(A %*% t(Z)) + matrix(rep(mu, n), ncol = 2, byrow = TRUE)
# Display the first 5 observations
head(data_manual, 5)
# Mean vector and covariance matrix
mu <- c(1, 2)
sigma <- matrix(c(1, 0.5, 0.5, 1), nrow = 2)
# Generate standard normal variables
n <- 2000
Z <- matrix(rnorm(n * length(mu)), ncol = length(mu))
# Cholesky decomposition of sigma
L <- chol(sigma)
# Transform Z to obtain multivariate normal variables
data_alt <- t(L %*% t(Z)) + matrix(mu, nrow = n , ncol = length(mu), byrow = TRUE)
# Display the first 5 observations
head(data_alt, 5)
set.seed(1)
mu <- c(1, 2)
Sigma <- matrix(c(1, 0.5, 0.5, 1), nrow = 2, byrow = TRUE)
n <- 2000
Z <- matrix(rnorm(n * 2), nrow = n, ncol = 2)
A <- chol(Sigma)
data <- mu + Z %*% A
print(head(data, 5))
sample_cov <- cov(data)
print(sample_cov)
print(sample_cov - Sigma)
print(matrix(rep(mu, n), ncol = 2, byrow = TRUE))
print(z)
print(Z)
print(head(Z))
# Display the first 5 observations
head(data_manual, 5)
library(MASS)
set.seed(1)
n <- 2000
mu <- c(1, 2)
Sigma <- matrix(c(1, 0.5, 0.5, 1), nrow=2)
data <- mvrnorm(n, mu, Sigma)
print(head(data, 5))
sample_cov <- cov(data)
print(sample_cov)
print(sample_cov - Sigma)
set.seed(1)
# Generate standard normal variables
Z <- matrix(rnorm(n * 2), nrow = n)
# Compute Cholesky decomposition of Sigma
A <- chol(Sigma)
# Transform standard normal variables
data_manual <- t(A %*% t(Z)) + matrix(rep(mu, n), ncol = 2, byrow = TRUE)
# Display the first 5 observations
head(data_manual, 5)
sample_cov <- cov(data)
print(sample_cov)
print(sample_cov - Sigma)
set.seed(1)
# Generate standard normal variables
Z <- matrix(rnorm(n * 2), nrow = n)
# Compute Cholesky decomposition of Sigma
A <- chol(Sigma)
# Transform standard normal variables
data_manual <- t(A %*% t(Z)) + matrix(rep(mu, n), ncol = 2, byrow = TRUE)
# Display the first 5 observations
head(data_manual, 5)
sample_cov <- cov(data_manual)
print(sample_cov)
print(sample_cov - Sigma)
print(cov(data_manual))
print(t(A %*% t(Z)))
# Display the first 5 observations
head(data_manual, 5)
print(sample_cov)
set.seed(1)
Z <- matrix(rnorm(n * 2), nrow = n)
#print(Z)
A <- chol(Sigma)
data_manual <- t(A %*% t(Z)) + matrix(rep(mu, n), ncol = 2, byrow = TRUE)
#print(t(A %*% t(Z)))
#print(matrix(rep(mu, n), ncol = 2, byrow = TRUE))
head(data_manual, 5)
sample_cov <- cov(data_manual)
print(sample_cov)
print(sample_cov - Sigma)
mymvnorm <- function(n, mu, sigma) {
Z <- matrix(rnorm(n * length(mu)), nrow = n, ncol = length(mu))
A <- chol(sigma)
data <- mu + Z %*% A
return(data)
}
set.seed(1)
n <- 2000
mu <- c(1, 2)
Sigma <- matrix(c(1, 0.5, 0.5, 1), nrow = 2)
data <- mymvnorm(n, mu, Sigma)
print(head(data, 5))
sample_cov <- cov(data)
print(sample_cov)
print(sample_cov - Sigma)
